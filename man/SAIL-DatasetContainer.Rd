% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datasets.R
\name{DatasetContainer}
\alias{DatasetContainer}
\alias{length.DatasetContainer}
\alias{[.DatasetContainer}
\alias{[[.DatasetContainer}
\title{DatasetContainer}
\usage{
\method{length}{DatasetContainer}(obj, ...)

\method{[}{DatasetContainer}(obj, ...)

\method{[[}{DatasetContainer}(obj, ...)
}
\arguments{
\item{obj}{(\code{<DatasetContainer>})\cr
Some \code{DatasetContainer} instance}

\item{...}{Optional varargs for the \code{length} function}

\item{datasets}{(\code{character|vector})\cr
The datasets to index}

\item{dataset}{(\code{character})\cr
The dataset to index}
}
\value{
A string representation of the \code{DatasetContainer} instance

The dataset references, if contained by this instance

A dataset reference, if contained by this instance
}
\description{
A container describing the datasets associated with a project

An override for the \code{length()} function that dispatches the call to the instance's \code{DatasetContainer$length} method

Subscript operator overload to retrieve one or more table references
derived from the indexed dataset(s)

Subscript operator overload to retrieve one or more table references
derived from the indexed dataset(s)
}
\details{
This helper helper class can be used to:
\enumerate{
\item \strong{\emph{Utilities}} -- Dataset-related utility methods, \emph{e.g.} confirming access permissions, collecting the newest refresh tables \emph{etc}
\item \strong{\emph{Parameterisation}} -- General interface to parameterise a set of datasets to be used by a user-defined function and/or method
\item \strong{\emph{Validation}} -- Can be used by user-defined operations to validate the inclusion of projects
\item \strong{\emph{Documentation}} -- An inline documentation of the datasets associated with a project
}

Several options are available to modify this instance's behaviour that can either be modified globally or on a per call basis:
\enumerate{
\item \strong{\emph{SAILR.QUIET}}: Determines whether the \code{DatasetContainer} methods will log debug information
\item \strong{\emph{SAILR.NO.WARN}}: Determines whether warnings will be logged to the console
\item \strong{\emph{SAILR.THROW.ERRORS}}: Specifies whether the current thread should be halted when an error is encountered; you are expected to wrap your \code{SAILR::Connection} calls with an error handler if you deactivate this option
}
}
\examples{

## ------------------------------------------------
## Method `DatasetContainer$new`
## ------------------------------------------------

\preformatted{
# Initialise the container...
datasets = DatasetContainer$new(
  # Some reference table unknown to \code{SAILR.METADATA}; character string references must be a named argument and can't be a reserved name - see \code{DatasetContainer$is.reserved}
  some.table               = 'SAILREFRV.SOME_TABLE',
  # Some project table unknown \code{SAILR.METADATA}; refresh dates should be appended to the name as usual - these can be refreshed using the \code{DatasetContainer$pull.refresh} method
  other.table              = 'SAILXXXV.OTHER_TABLE_20240905',
  # Include some reference table, no schema is needed since this is retrieved from SAILREFRV. Note that the argument name _must_ match \code{DatasetContainer$ref}'s \code{$ref} property if you are using a named argument
  sailref.wimd2019.sm.area = DatasetContainer$ref('sailref.wimd2019.sm.area'),
  # Include some reference table from a project schema; and, as above, the argument name must match the reference name
  adde.deaths              = DatasetContainer$ref('adde.deaths', 'SAILXXXV'),
  # Include a specific refresh of some reference table from a project schema; and, as above, the argument name must match
  abde.births              = DatasetContainer$ref('abde.births', 'SAILXXXV', date='20240905'),
  DatasetContainer$ref('wdsd.pers', 'SAILXXXV', '20240905')
)
}


## ------------------------------------------------
## Method `DatasetContainer$[`
## ------------------------------------------------

\preformatted{
some.container[c('gp.event', 'other.table')]
}


## ------------------------------------------------
## Method `DatasetContainer$[[`
## ------------------------------------------------

\preformatted{
some.container[['gp.event']]
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{reference}}{(\code{list})\cr
A private reference to the datasets contained by this instance}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{reference}}{(\code{list})\cr
A private reference to the datasets contained by this instance}

\item{\code{datasets}}{(\code{character|NA})\cr
A read-only field describing the datasets contained by this instance}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DatasetContainer-new}{\code{DatasetContainer$new()}}
\item \href{#method-DatasetContainer-get}{\code{DatasetContainer$get()}}
\item \href{#method-DatasetContainer-set}{\code{DatasetContainer$set()}}
\item \href{#method-DatasetContainer-retrieve}{\code{DatasetContainer$retrieve()}}
\item \href{#method-DatasetContainer-require.datasets}{\code{DatasetContainer$require.datasets()}}
\item \href{#method-DatasetContainer-require.like}{\code{DatasetContainer$require.like()}}
\item \href{#method-DatasetContainer-require.access}{\code{DatasetContainer$require.access()}}
\item \href{#method-DatasetContainer-require.shape}{\code{DatasetContainer$require.shape()}}
\item \href{#method-DatasetContainer-[}{\code{DatasetContainer$[()}}
\item \href{#method-DatasetContainer-[[}{\code{DatasetContainer$[[()}}
\item \href{#method-DatasetContainer-length}{\code{DatasetContainer$length()}}
\item \href{#method-DatasetContainer-clone}{\code{DatasetContainer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-new"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-new}{}}}
\subsection{Method \code{new()}}{
Initialise a new DatasetContainer
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{A set of datasets to be contained by this instance, all arguments should be named unless given as a \code{DatasetContainer$ref}. See the \code{$intliaze} Example section}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new DatasetContainer instance
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\preformatted{
# Initialise the container...
datasets = DatasetContainer$new(
  # Some reference table unknown to \code{SAILR.METADATA}; character string references must be a named argument and can't be a reserved name - see \code{DatasetContainer$is.reserved}
  some.table               = 'SAILREFRV.SOME_TABLE',
  # Some project table unknown \code{SAILR.METADATA}; refresh dates should be appended to the name as usual - these can be refreshed using the \code{DatasetContainer$pull.refresh} method
  other.table              = 'SAILXXXV.OTHER_TABLE_20240905',
  # Include some reference table, no schema is needed since this is retrieved from SAILREFRV. Note that the argument name _must_ match \code{DatasetContainer$ref}'s \code{$ref} property if you are using a named argument
  sailref.wimd2019.sm.area = DatasetContainer$ref('sailref.wimd2019.sm.area'),
  # Include some reference table from a project schema; and, as above, the argument name must match the reference name
  adde.deaths              = DatasetContainer$ref('adde.deaths', 'SAILXXXV'),
  # Include a specific refresh of some reference table from a project schema; and, as above, the argument name must match
  abde.births              = DatasetContainer$ref('abde.births', 'SAILXXXV', date='20240905'),
  DatasetContainer$ref('wdsd.pers', 'SAILXXXV', '20240905')
)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-get"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-get}{}}}
\subsection{Method \code{get()}}{
Get the table reference name of the dataset in the shape of \code{[SCHEMA].[TABLE]}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$get(dataset)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{character})\cr
The name of the dataset to select}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Either (a) a character string representing the table reference if contained by this instance; otherwise (b) an \code{NA} value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-set"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-set}{}}}
\subsection{Method \code{set()}}{
Sets the key-value pair for the given dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$set(dataset, reference)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{character})\cr
The name of the dataset to update}

\item{\code{reference}}{(\code{character|DatasetContainer$ref})\cr
The table reference in the shape of \code{[SCHEMA].[TABLE]}, or a reference structure generated by the \code{DatasetContainer$ref} static method}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The reference to this instance which can be used for chaining, \emph{e.g.} \code{dataset$set('gp.event', 'schema.table')$set('pedw.spell', 'schema.table')}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-retrieve"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-retrieve}{}}}
\subsection{Method \code{retrieve()}}{
Retrieves information relating to the specified dataset(s)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$retrieve(
  dataset,
  properties = NA,
  stop.on.error = getOption("SAILR.THROW.ERRORS", TRUE),
  suppress.warnings = getOption("SAILR.NO.WARN", FALSE)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{character|vector|list})\cr
The name of the dataset, or a vector/list of dataset names}

\item{\code{properties}}{(\code{list|vector})\cr
An optional flat list or vector of characters specifying which properties to retrieve, see the \code{DatasetContainer$get} example section for more information}

\item{\code{stop.on.error}}{(\code{logical})\cr
Whether to return a \code{FALSE} logical when an error is encountered instead of stopping the execution of the parent thread; defaults to \code{option(SAILR.THROW.ERRORS=TRUE)}}

\item{\code{suppress.warnings}}{(\code{logical})\cr
Whether to suppress warnings; defaults to \code{option(SAILR.NO.WARN=FALSE)}}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\tabular{lll}{
Key       \tab Parent     \tab Details                                                                        \cr
date      \tab Top-level  \tab The selected table date                                                        \cr
schema    \tab Top-level  \tab The dataset schema                                                             \cr
relation  \tab Top-level  \tab The dataset type                                                               \cr
reference \tab Top-level  \tab The table \code{[SCHEMA].[TABLE]} reference                                         \cr
dataset   \tab Top-level  \tab The dataset object                                                             \cr
ref       \tab \code{$dataset} \tab The key used to contain this reference                                         \cr
alt       \tab \code{$dataset} \tab Whether this dataset prepends a prefix to its table name                       \cr
tag       \tab \code{$dataset} \tab How dates are appended to the table name                                       \cr
name      \tab \code{$dataset} \tab The name of the dataset                                                        \cr
origin    \tab \code{$dataset} \tab Where this dataset originated                                                  \cr
static    \tab \code{$dataset} \tab Whether this dataset is copied to a project, or is hosted in its origin schema \cr
}
}

\subsection{Returns}{
Either:
\enumerate{
\item If the dataset is present and no properties provided -- a list describing the dataset (or a list of lists if multiple datasets were selected)
\item If the dataset is present with the given properties -- a key-value pair list containing the information requested (or a list of lists if multiple datasets were selected)
\item If no dataset by this name is present -- a \code{NA} value
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-require.datasets"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-require.datasets}{}}}
\subsection{Method \code{require.datasets()}}{
Tests whether the given datasets have been defined within the DatasetContainer
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$require.datasets(datasets, assert = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{datasets}}{(\code{character|list|vector})\cr
A scalar character describing a single dataset, or a list/vector of characters describing which datasets should be refreshed. If the specified dataset element is named, \emph{e.g.} \code{list(abde.births='ABDE_BIRTHS_20240630')}, this method will test both that the \code{abde.births} is present & that it refers to the \code{ABDE_BIRTHS_20240630} table. Note that including a schema, \emph{e.g.} \code{SAIL####V.ABDE_BIRTHS_20240630}, will test both the schema and the dataset name.}

\item{\code{assert}}{(\code{logical|NA})\cr
An optional logical that describes whether to throw an error and to stop the execution of the current thread if one or more of the datasets aren't present; defaults to \code{TRUE}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A logical describing whether the datasets are contained by this instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-require.like"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-require.like}{}}}
\subsection{Method \code{require.like()}}{
Tests whether a dataset's reference refers to a specific relation type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$require.like(datasets, relation, assert = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{datasets}}{(\code{character|list|vector})\cr
The name of the dataset, or a list/vector of characters, specifying dataset(s) to test}

\item{\code{relation}}{(\code{character})\cr
A scalar character a relation comparator(s) which can be one of: \code{BASE}, \code{REFERENCE}, \code{SESSION}, \code{PROJECT}, \code{WORKSPACE}, \code{ENCRYPTION} or \code{UNKNOWN} - see \code{SAILR.DEF$DREF.RELATION} for more details}

\item{\code{assert}}{(\code{logical|NA})\cr
An optional logical that describes whether to throw an error and to stop the execution of the current thread if one or more of the datasets aren't present; defaults to \code{TRUE}}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
\tabular{lll}{
Type         \tab Schema regex            \tab Details                                                         \cr
\code{BASE}       \tab \code{^BASE}            \tab A base schema from which datasets are cloned                    \cr
\code{REFERENCE}  \tab \code{^SAIL[A-Z][\\w]+$} \tab A dataset reference schema containing the datasets              \cr
\code{SESSION}    \tab \code{^SESSION$}        \tab A global temporary table for this session                       \cr
\code{PROJECT}    \tab \code{^SAIL\\d+V$}       \tab A project table cloned from \code{BASE}, \code{REFERENCE} or \code{ENCRYPTION} \cr
\code{WORKSPACE}  \tab \code{^SAILW\\d+V$}      \tab A project workspace containing user-defined tables              \cr
\code{ENCRYPTION} \tab \code{^SAILX\\d+V$}      \tab A project-level encryption table                                \cr
}
}

\subsection{Returns}{
A logical describing whether the dataset is
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-require.access"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-require.access}{}}}
\subsection{Method \code{require.access()}}{
Tests whether the client has the privileges to interface with the datasets defined within this container.

Note that '\emph{privileges}' could describe one of the following privileges: \code{SELECT}, \code{UPDATE}, \code{INSERT} \emph{etc}. Please see IBM's documentation on
user privileges \href{https://www.ibm.com/docs/en/bpm/8.5.6?topic=privileges-db2-database}{here} for more information, or see \code{SAILR.DEF$PRIVILEGES}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$require.access(db, privileges, assert = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{db}}{(\code{<SAILR>})\cr
An active, valid \code{<SAILR>} database connection}

\item{\code{privileges}}{(\code{list})\cr
A named list in which the key describes the dataset, and where the value describes which privileges are required, \emph{e.g.} \code{list(gp.events=c('INSERT', 'SELECT'), pedw.spell='ALL')}. Note that \code{ALL} expands to all privileges described by \code{SAILR.DEF$PRIVILEGES}}

\item{\code{assert}}{(\code{logical|NA})\cr
An optional logical that describes whether to throw an error and to stop the execution of the current thread if one or more of the datasets aren't present; defaults to \code{TRUE}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A logical reflecting whether the client has the privileges to interface with the datasets
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-require.shape"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-require.shape}{}}}
\subsection{Method \code{require.shape()}}{
Tests whether the given dataset(s) meet the selected criteria by ensuring each of its columns and their datatypes
match those specified
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$require.shape(db, criteria, assert = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{db}}{(\code{<SAILR>})\cr
An active, valid \code{<SAILR>} database connection}

\item{\code{criteria}}{(\code{list})\cr
A list of column criteria for one or more dataset(s), \emph{e.g.} \code{list(gp.event=list(ALF_PE='BIGINTEGER))}, in which each key of each inner list describes of the column name(s) and the value(s) specify the required column's type. Do note that types are fuzzy matched to exclude matching on size unless explicitly specified, \emph{e.g.} \code{list(some.table=list(SOME_TEXT_COL='VARCHAR'))} \emph{v.s.} \code{list(some.table=list(SOME_TEXT_COL='VARCHAR(200)'))}. Please do note that names, columns and types are case sensitive.}

\item{\code{assert}}{(\code{logical|NA})\cr
An optional logical that describes whether to throw an error and to stop the execution of the current thread if one or more of the datasets aren't present; defaults to \code{TRUE}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A logical reflecting whether the criteria has been met
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-["></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-[}{}}}
\subsection{Method \code{[()}}{
Subscript operator overload to retrieve one or more table references
derived from the indexed dataset(s)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$[(datasets)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{datasets}}{(\code{character|vector})\cr
The datasets to index}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The dataset references, if contained by this instance
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\preformatted{
some.container[c('gp.event', 'other.table')]
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-[["></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-[[}{}}}
\subsection{Method \code{[[()}}{
Subscript operator overload to retrieve one or more table references
derived from the indexed dataset(s)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$[[(dataset)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataset}}{(\code{character})\cr
The dataset to index}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataset reference, if contained by this instance
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\preformatted{
some.container[['gp.event']]
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-length"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-length}{}}}
\subsection{Method \code{length()}}{
Compute the length of the datasets contained by this instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$length(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Optional varargs from the \code{length} call}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer describing the number of datasets referenced by this instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DatasetContainer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DatasetContainer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetContainer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
